Archive member included to satisfy reference by file (symbol)

g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
                              ./MUSART_Program.o (__udivmodsi4)
g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
                              g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o (exit)
g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
                              ./MUSART_Program.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
LOAD ./MDIO_Prog.o
LOAD ./MSPI_Prog.o
LOAD ./MUSART_Program.o
LOAD ./main.o
START GROUP
LOAD g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a
LOAD g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5\libm.a
LOAD g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5\libc.a
LOAD g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5\libatmega32.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xba6
 *(.vectors)
 .vectors       0x0000000000000000       0x54 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vector_default
                0x0000000000000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x10 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
                0x0000000000000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000070        0x8 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x0000000000000078        0x4 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000078                __vector_1
                0x0000000000000078                __vector_12
                0x0000000000000078                __bad_interrupt
                0x0000000000000078                __vector_6
                0x0000000000000078                __vector_3
                0x0000000000000078                __vector_11
                0x0000000000000078                __vector_17
                0x0000000000000078                __vector_19
                0x0000000000000078                __vector_7
                0x0000000000000078                __vector_5
                0x0000000000000078                __vector_4
                0x0000000000000078                __vector_9
                0x0000000000000078                __vector_2
                0x0000000000000078                __vector_15
                0x0000000000000078                __vector_8
                0x0000000000000078                __vector_14
                0x0000000000000078                __vector_10
                0x0000000000000078                __vector_16
                0x0000000000000078                __vector_18
                0x0000000000000078                __vector_20
 .text          0x000000000000007c        0x0 ./MDIO_Prog.o
 .text          0x000000000000007c        0x0 ./MSPI_Prog.o
 .text          0x000000000000007c        0x0 ./MUSART_Program.o
 .text          0x000000000000007c        0x0 ./main.o
 .text          0x000000000000007c        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x000000000000007c        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .text          0x000000000000007c        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
                0x000000000000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.MDIO_VidSetPinDir
                0x000000000000007c      0x1f6 ./MDIO_Prog.o
                0x000000000000007c                MDIO_VidSetPinDir
 .text.MDIO_VidSetPinValue
                0x0000000000000272      0x1f6 ./MDIO_Prog.o
                0x0000000000000272                MDIO_VidSetPinValue
 .text.MDIO_VidGetPinValue
                0x0000000000000468       0xea ./MDIO_Prog.o
                0x0000000000000468                MDIO_VidGetPinValue
 .text.MDIO_VidSetPortDir
                0x0000000000000552       0xd4 ./MDIO_Prog.o
                0x0000000000000552                MDIO_VidSetPortDir
 .text.MDIO_VidSetPortValue
                0x0000000000000626       0xd4 ./MDIO_Prog.o
                0x0000000000000626                MDIO_VidSetPortValue
 .text.MDIO_VidToggPin
                0x00000000000006fa       0xf8 ./MDIO_Prog.o
                0x00000000000006fa                MDIO_VidToggPin
 .text.MCAL_SPIMasterInit
                0x00000000000007f2       0x78 ./MSPI_Prog.o
                0x00000000000007f2                MCAL_SPIMasterInit
 .text.MCAL_SPISlaveInit
                0x000000000000086a       0x4a ./MSPI_Prog.o
                0x000000000000086a                MCAL_SPISlaveInit
 .text.MCAL_SPIMasterSend
                0x00000000000008b4       0x3a ./MSPI_Prog.o
                0x00000000000008b4                MCAL_SPIMasterSend
 .text.MCAL_SPISlaveReceive
                0x00000000000008ee       0x30 ./MSPI_Prog.o
                0x00000000000008ee                MCAL_SPISlaveReceive
 .text.MUSART_VidInit
                0x000000000000091e       0xd6 ./MUSART_Program.o
                0x000000000000091e                MUSART_VidInit
 .text.MUSART_VidReceiveDataInterrupt
                0x00000000000009f4       0x22 ./MUSART_Program.o
                0x00000000000009f4                MUSART_VidReceiveDataInterrupt
 .text.MUSART_VidReceiveDataPolling
                0x0000000000000a16       0x2c ./MUSART_Program.o
                0x0000000000000a16                MUSART_VidReceiveDataPolling
 .text.MUSART_VidSendData
                0x0000000000000a42       0x34 ./MUSART_Program.o
                0x0000000000000a42                MUSART_VidSendData
 .text.MUSART_VidCallBack
                0x0000000000000a76       0x3c ./MUSART_Program.o
                0x0000000000000a76                MUSART_VidCallBack
 .text.__vector_13
                0x0000000000000ab2       0x7e ./MUSART_Program.o
                0x0000000000000ab2                __vector_13
 .text.main     0x0000000000000b30       0x2e ./main.o
                0x0000000000000b30                main
 .text.libgcc.mul
                0x0000000000000b5e        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000b5e       0x44 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
                0x0000000000000b5e                __udivmodsi4
 .text.libgcc   0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
                0x0000000000000ba2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000ba2        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
                0x0000000000000ba2                _exit
                0x0000000000000ba2                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000ba2        0x4 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000ba6                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000ba6                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000ba6
                [!provide]                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 ./MDIO_Prog.o
 .data          0x0000000000800060        0x0 ./MSPI_Prog.o
 .data          0x0000000000800060        0x0 ./MUSART_Program.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800060        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                [!provide]                        PROVIDE (__data_end = .)

.bss            0x0000000000800060        0x4
                0x0000000000800060                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800060        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
 .bss           0x0000000000800060        0x0 ./MDIO_Prog.o
 .bss           0x0000000000800060        0x0 ./MSPI_Prog.o
 .bss           0x0000000000800060        0x0 ./MUSART_Program.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800060        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.Copy_U8PSet_RXValue
                0x0000000000800060        0x2 ./MUSART_Program.o
 .bss.Copy_PVidRxFunc
                0x0000000000800062        0x2 ./MUSART_Program.o
 *(COMMON)
                0x0000000000800064                PROVIDE (__bss_end = .)
                0x0000000000000ba6                __data_load_start = LOADADDR (.data)
                0x0000000000000ba6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800064        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800064                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xef4
 *(.stab)
 .stab          0x0000000000000000      0x870 ./MDIO_Prog.o
 .stab          0x0000000000000870      0x240 ./MSPI_Prog.o
                                        0x24c (size before relaxing)
 .stab          0x0000000000000ab0      0x378 ./MUSART_Program.o
                                        0x384 (size before relaxing)
 .stab          0x0000000000000e28       0xcc ./main.o
                                         0xd8 (size before relaxing)

.stabstr        0x0000000000000000      0x640
 *(.stabstr)
 .stabstr       0x0000000000000000      0x640 ./MDIO_Prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x12
 *(.comment)
 .comment       0x0000000000000000       0x12 ./MDIO_Prog.o
                                         0x13 (size before relaxing)
 .comment       0x0000000000000012       0x13 ./MSPI_Prog.o
 .comment       0x0000000000000012       0x13 ./MUSART_Program.o
 .comment       0x0000000000000012       0x13 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .debug_aranges
                0x0000000000000020       0x20 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000040       0x20 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x558
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
 .debug_info    0x00000000000004e6       0x26 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .debug_info    0x000000000000050c       0x26 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .debug_info    0x0000000000000532       0x26 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000      0x4df
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
 .debug_abbrev  0x00000000000004a3       0x14 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .debug_abbrev  0x00000000000004b7       0x14 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .debug_abbrev  0x00000000000004cb       0x14 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000      0x224
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
 .debug_line    0x000000000000001d      0x121 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .debug_line    0x000000000000013e       0x61 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .debug_line    0x000000000000019f       0x85 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x1f8
 *(.debug_str)
 .debug_str     0x0000000000000000      0x199 g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/../../../../avr/lib/avr5/crtatmega32.o
 .debug_str     0x0000000000000199       0x5f g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_udivmodsi4.o)
 .debug_str     0x00000000000001f8       0x5f g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_exit.o)
 .debug_str     0x00000000000001f8       0x5f g:/embedded system course/tools/avr-gcc-10.1.0-x64-windows/bin/../lib/gcc/avr/10.1.0/avr5\libgcc.a(_clear_bss.o)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(Smart_Home_Project_Master.elf elf32-avr)
LOAD linker stubs
